name: Continuous Delivery

on:
  push:
    branches:
      - master

env:
  SERVICE_NAME: push

jobs:
  cd:
    name: Continuous Delivery
    runs-on: ubuntu-latest
    steps:
      - id: yarn-cache
        name: Get Yarn cache path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/cache@v1
        name: Load Yarn cache
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --ignore-scripts
        name: Install dependencies
      - run: yarn build
        name: Build package

      # Continuous Delivery Pipeline --

      - uses: rlespinasse/github-slug-action@master
        name: Get short Git SHA-1
      - uses: codfish/semantic-release-action@master
        name: Semantic Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - id: sentry-release
        if: steps.semantic.outputs.new-release-published == 'true'
        name: Generate Sentry Release ID
        run: echo "::set-output name=id::${{ env.SERVICE_NAME }}@${{ env.RELEASE_VERSION }}-${{ env.GITHUB_SHA_SHORT }}"
      - uses: tclindner/sentry-releases-action@v1.0.0
        name: Publish the release to Sentry
        if: steps.semantic.outputs.new-release-published == 'true'
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: 47ng
          SENTRY_PROJECT: chiffre
        with:
          tagName: ${{ steps.sentry-release.outputs.id }}
          environment: production
      - uses: 47ng/actions-clever-cloud@master
        name: Deploy to Clever Cloud
        if: steps.semantic.outputs.new-release-published == 'true'
        with:
          alias: push
          timeout: 600
          extraEnvSafelist: SENTRY_RELEASE
          CLEVER_ENV_SENTRY_RELEASE: ${{ steps.sentry-release.outputs.id }}
        env:
          CLEVER_TOKEN: ${{ secrets.CLEVER_TOKEN }}
          CLEVER_SECRET: ${{ secrets.CLEVER_SECRET }}
