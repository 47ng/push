name: Continuous Integration

on:
  push:
    branches:
      - next
      - feature/*
      - dependabot/*
  pull_request:
    types: [opened, edited, reopened]

env:
  SERVICE_NAME: push

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - id: yarn-cache
        name: Get Yarn cache path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/checkout@722adc6
      - run: git fetch --prune --unshallow
      - uses: actions/setup-node@1c5c137
        with:
          node-version: 12.x
      - uses: actions/cache@70655ec
        name: Load Yarn cache
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --ignore-scripts
        name: Install dependencies
      - run: yarn ci
        name: Run integration tests
      - uses: coverallsapp/github-action@832e70b
        name: Report code coverage
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - id: short-sha1
        name: Get short Git SHA-1
        run: echo "::set-output name=value::$(echo $GITHUB_SHA | cut -c1-8)"
      - id: latest-tag
        uses: WyriHaximus/github-action-get-previous-tag@24cf9bd
        name: Get Latest Tag
      - id: latest-version
        uses: frabert/replace-string-action@4ec615c
        name: Format Latest Tag to Version
        with:
          pattern: '^v?(.+)'
          string: "${{ steps.latest-tag.outputs.tag }}"
          replace-with: '$1'
      - id: sentry-release
        name: Generate Sentry Release ID
        run: echo "::set-output name=id::${{ env.SERVICE_NAME }}@${{ steps.latest-version.outputs.replaced }}-${{ steps.short-sha1.outputs.value }}"
      - run: echo "${{ steps.sentry-release.outputs.id }}"
      - uses: 8398a7/action-slack@78391c2
        name: Notify on Slack
        if: always() # Pick up events even if the job fails or is canceled.
        with:
          status: ${{ job.status }}
          author_name: Continuous Integration
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
